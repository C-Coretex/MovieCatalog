@page "/details"
@attribute [StreamRendering]
@using MovieCatalog.Application.Contracts.DTOs
@using MovieCatalog.Application.Contracts.IAppServices
@inject IMovieCatalogAppService MovieCatalogAppService

<PageTitle>Movie Details</PageTitle>

<h3 class="mb-3">Movie Details for @(_entry is null ? Id : _entry.Title)</h3>

@if (_entry is null)
{
    <div class="text-muted fst-italic">Loading...</div>
}
else
{
    <div class="card mb-4 pe-2">
        <div class="row">
            <div class="col-md-3">
                @if (_entry.PosterUrl != "N/A")
                {
                    <img src="@_entry.PosterUrl" alt="@_entry.Title Poster" class="img-fluid rounded float-left" />
                }
                else
                {
                    <span class="text-muted">N/A</span>
                }
            </div>

            <div class="col-md-9 mt-2">
                <h4 class="fw-bold">@_entry.Title <span class="fst-italic">(@_entry.Year)</span></h4>
                
                <!--I really didn't want to write all the parameters here by hand, so I asked AI to generate details properties UI-->
                <dl class="row">
                    <dt class="col-sm-3">Director:</dt>
                    <dd class="col-sm-9">@_entry.Director</dd>

                    <dt class="col-sm-3">Actors:</dt>
                    <dd class="col-sm-9">@string.Join(", ", _entry.Actors)</dd>

                    <dt class="col-sm-3">Plot:</dt>
                    <dd class="col-sm-9">@_entry.Plot</dd>

                    <dt class="col-sm-3">Genres:</dt>
                    <dd class="col-sm-9">@string.Join(", ", _entry.Genres)</dd>

                    <dt class="col-sm-3">Languages:</dt>
                    <dd class="col-sm-9">@string.Join(", ", _entry.Languages)</dd>

                    <dt class="col-sm-3">Countries:</dt>
                    <dd class="col-sm-9">@string.Join(", ", _entry.Countries)</dd>

                    <dt class="col-sm-3">Awards:</dt>
                    <dd class="col-sm-9">@_entry.Awards</dd>

                    <dt class="col-sm-3">Runtime:</dt>
                    <dd class="col-sm-9">@_entry.Runtime</dd>

                    <dt class="col-sm-3">Rated:</dt>
                    <dd class="col-sm-9">@_entry.Rated</dd>

                    <dt class="col-sm-3">Released:</dt>
                    <dd class="col-sm-9">@_entry.Released</dd>

                    <dt class="col-sm-3">DVD:</dt>
                    <dd class="col-sm-9">@_entry.Dvd</dd>

                    <dt class="col-sm-3">BoxOffice:</dt>
                    <dd class="col-sm-9">@_entry.BoxOffice</dd>

                    <dt class="col-sm-3">Production:</dt>
                    <dd class="col-sm-9">@_entry.Production</dd>

                    <dt class="col-sm-3">Metascore:</dt>
                    <dd class="col-sm-9">@_entry.Metascore</dd>

                    <dt class="col-sm-3">IMDB Rating:</dt>
                    <dd class="col-sm-9">@_entry.ImdbRating</dd>

                    <dt class="col-sm-3">IMDB Votes:</dt>
                    <dd class="col-sm-9">@_entry.ImdbVotes</dd>

                    <dt class="col-sm-3">Type:</dt>
                    <dd class="col-sm-9">@_entry.Type</dd>

                    <dt class="col-sm-3">Ratings:</dt>
                    <dd class="col-sm-9">
                        @foreach (var rating in _entry.Ratings)
                        {
                            <span class="badge bg-secondary me-1">@rating.Source: <b>@rating.ValuePercent%</b></span>
                        }
                    </dd>
                </dl>
            </div>
        </div>
    </div>
}
@if (_apiException)
{
    <p clas="alert alert-danger">There was an exception with API. Please try again.</p>
}

@code {

    [SupplyParameterFromQuery]
    public required string Id { get; set; }

    private FullMovieDto? _entry;
    private bool _apiException;

    protected override async Task OnInitializedAsync()
    {
        if(string.IsNullOrWhiteSpace(Id))
            _apiException = true;

        var data = await MovieCatalogAppService.GetMovieDetailsById(Id);
        if (!data.Successful)
            _apiException = true;
        else
            _entry = data.Entry;
    }
}